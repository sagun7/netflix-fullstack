{"ast":null,"code":"const MovieReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_MOVIES_START\":\n      return {\n        movies: [],\n        isFetching: true,\n        error: false\n      };\n\n    case \"GET_MOVIES_SUCCESS\":\n      return {\n        movies: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"GET_MOVIES_FAILURE\":\n      return {\n        movies: [],\n        isFetching: false,\n        error: true\n      };\n\n    case \"DELETE_MOVIE_START\":\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case \"DELETE_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.filter(movie => movie._id !== action.payload),\n        isFetching: false,\n        error: false\n      };\n\n    case \"DELETE_MOVIE_FAILURE\":\n      return { ...state,\n        isFetching: false,\n        error: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = MovieReducer;\nexport default MovieReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieReducer\");","map":{"version":3,"sources":["/Users/sagunpanthi/Documents/fullstack-projects/netflix/admin/src/context/movieContext/MovieReducer.js"],"names":["MovieReducer","state","action","type","movies","isFetching","error","payload","filter","movie","_id"],"mappings":"AAAA,MAAMA,YAAY,GAAE,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,kBAAL;AACI,aAAM;AACFC,QAAAA,MAAM,EAAE,EADN;AAEFC,QAAAA,UAAU,EAAE,IAFV;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAKJ,SAAK,oBAAL;AACQ,aAAM;AACFF,QAAAA,MAAM,EAAEF,MAAM,CAACK,OADb;AAEFF,QAAAA,UAAU,EAAE,KAFV;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAKR,SAAK,oBAAL;AACY,aAAM;AACFF,QAAAA,MAAM,EAAE,EADN;AAEFC,QAAAA,UAAU,EAAE,KAFV;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAShB,SAAK,oBAAL;AACI,aAAM,EACH,GAAGL,KADA;AAEFI,QAAAA,UAAU,EAAE,IAFV;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAKJ,SAAK,sBAAL;AACQ,aAAM;AACFF,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaI,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,GAAN,KAAcR,MAAM,CAACK,OAAlD,CADN;AAEFF,QAAAA,UAAU,EAAE,KAFV;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAKR,SAAK,sBAAL;AACY,aAAM,EACF,GAAGL,KADD;AAEFI,QAAAA,UAAU,EAAE,KAFV;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAMZ;AACY,aAAM,EAAC,GAAGL;AAAJ,OAAN;AA3CZ;AA8CH,CA/CD;;KAAMD,Y;AAiDN,eAAeA,YAAf","sourcesContent":["const MovieReducer =(state,action) =>{\n    switch(action.type){\n        case \"GET_MOVIES_START\":\n            return{\n                movies: [],\n                isFetching: true,\n                error: false,\n            };\n        case \"GET_MOVIES_SUCCESS\":\n                return{\n                    movies: action.payload,\n                    isFetching: false,\n                    error: false,\n                }\n        case \"GET_MOVIES_FAILURE\":\n                    return{\n                        movies: [],\n                        isFetching: false,\n                        error: true,\n                    };\n        \n      \n\n    \n    case \"DELETE_MOVIE_START\":\n        return{\n           ...state,\n            isFetching: true,\n            error: false,\n        };\n    case \"DELETE_MOVIE_SUCCESS\":\n            return{\n                movies: state.movies.filter(movie => movie._id !== action.payload),\n                isFetching: false,\n                error: false,\n            }\n    case \"DELETE_MOVIE_FAILURE\":\n                return{\n                    ...state,\n                    isFetching: false,\n                    error: true,\n                };\n    \n    default :\n                return{...state}\n\n}\n}\n\nexport default MovieReducer;"]},"metadata":{},"sourceType":"module"}